/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

int solve(TreeNode*root , int ans)
{   
    int ind=1;
    int level;
     queue<TreeNode*>q;
     q.push(root);
     while(!q.empty())
     {
          
          int n = q.size();
          int temp=0;
          while(n--)
          {    
              auto p = q.front();
                q.pop();
                temp+=p->val;
              if(p->left)
                  q.push(p->left);
              if(p->right)
                  q.push(p->right);
          }
        
        if(ans < temp)
        {
            ans=temp;
            level = ind;
        }
      ind++;
     }

     return level;

}
    int maxLevelSum(TreeNode* root) {
      
       
        return solve(root , INT_MIN);
       
    }
};
