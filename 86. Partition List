/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
      
        if(head==NULL || head->next==NULL)
            return head;
        ListNode*s;
        ListNode*g;
        ListNode*a;
        ListNode*b;
        s=g=a=b=NULL;
        ListNode*p;
        p=head;
        while(p!=NULL)
        {
            
            if(p->val < x)
            {
                if(s==NULL)
                      s=p;
                else
                  a->next = p;
                
                a=p;
                p=p->next;
                a->next=NULL;
                
                 
            }
            else
            {
                if(g==NULL)
                      g=p;
                else
                    b->next = p;
                
                b=p;
                p=p->next;
                b->next=NULL;
                
            }
            
        }
     
     if(s==NULL)
          return g;
     if(g==NULL)
         return s;
        
    a->next = g;
    
        
       return s; 
        
    }
};
