class Solution {
public:

int solve(int i , int j , string s1 , string s2 , vector<vector<int>>&dp)
{
     if(i<0 && j>=0)
     {
         int ans=0;
         while(j>=0)
         {
             ans+=s2[j];
             j--;
         }
         return ans;
     }
  else if(i>=0 && j<0)
  {
       int ans=0;
       while(i>=0) 
       {
           ans+=s1[i];
           i--;
       }
    return ans;
  }
  else if(i<0 && j<0)
  {
      return 0;
  }

  if(dp[i][j] != -1)
  {
      return dp[i][j];
  }

  if(s1[i] == s2[j])
  {
      return dp[i][j] =  solve(i-1 , j-1 , s1 , s2 , dp);
  } 
  else
   {
    return dp[i][j] = min(solve(i-1 , j , s1 , s2 , dp) + s1[i] , solve(i,j-1,s1,s2,dp) + s2[j]);
   }

 
}


    int minimumDeleteSum(string s1, string s2) {
        int n = s1.size();
        int m = s2.size();
         
         vector<vector<int>>dp( n+1 , vector<int>(m+1 , -1));

         return solve(n,m,s1,s2,dp);

    }
};
