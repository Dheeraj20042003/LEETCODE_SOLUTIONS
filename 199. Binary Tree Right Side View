/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
         vector<int>sol;
        if(root==NULL)
             return sol;
       
        TreeNode*p;
       queue<TreeNode*>q;
        q.push(root);
    int n =q.size();
     sol.push_back(root->val);   
     while(q.size()!=0)
     {
         vector<int>temp;
           while(n--)
           {
                  
                 p = q.front();
               q.pop();
               if(p->left)
               {
                    temp.push_back(p->left->val);
                   q.push(p->left);
               }
               if(p->right)
               {
                   temp.push_back(p->right->val);
                    q.push(p->right);
              }
             
               
           }
         n=q.size();
         if(temp.size()!=0)
             sol.push_back(temp[temp.size()-1]);
         
         
     }
        
  return sol;    
    }
};
