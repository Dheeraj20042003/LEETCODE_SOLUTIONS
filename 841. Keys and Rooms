class Solution {
public:
    bool canVisitAllRooms(vector<vector<int>>& rooms) {
        
         if(rooms.size() <= 1)
           return true;

        queue<int>q;
        int ans=0;
        for(int i=0;i<rooms[0].size();i++)
        {
             q.push(rooms[0][i]);
        }

        vector<int>visited(rooms.size() , 0);
        visited[0] = 1;
        ans++;
 
        while(!q.empty())
        {
             int t = q.front();
             q.pop();
             if(visited[t] == 0)
             {     
                 ans++;
                 visited[t] = 1;
                 for(int i=0;i<rooms[t].size();i++)
                 {
                      int x = rooms[t][i];
                      if(visited[x] == 0)
                      {
                          q.push(x);
                      }
                 }      
             } 
        }

    
    return ans==rooms.size();
        
    }
};
